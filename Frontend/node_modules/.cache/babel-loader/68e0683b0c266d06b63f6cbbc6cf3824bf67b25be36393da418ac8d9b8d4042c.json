{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/shrey/OneDrive/Desktop/Learn-React/Inotebook/Frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/shrey/OneDrive/Desktop/Learn-React/Inotebook/Frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/shrey/OneDrive/Desktop/Learn-React/Inotebook/Frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useContext,useState}from\"react\";import NoteContext from\"./NoteContext\";import AlertContext from\"../alert/AlertContext\";import{jsx as _jsx}from\"react/jsx-runtime\";require(\"dotenv\").config();var NoteState=function NoteState(props){var host=process.env.host;var _useContext=useContext(AlertContext),showAlert=_useContext.showAlert;var notesInitial=[];var _useState=useState(notesInitial),_useState2=_slicedToArray(_useState,2),notes=_useState2[0],setNotes=_useState2[1];// for fetching all notes\nvar getNotes=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var response,jsonResData;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"\".concat(host,\"/api/notes/fetchallnotes\"),{method:'GET',headers:{'Content-Type':'application/json','auth-token':localStorage.getItem('token')}});case 2:response=_context.sent;_context.next=5;return response.json();case 5:jsonResData=_context.sent;setNotes(jsonResData);case 7:case\"end\":return _context.stop();}},_callee);}));return function getNotes(){return _ref.apply(this,arguments);};}();// To Add a Note\nvar addNote=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(title,description,tag){var response,jsonData,note;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch(\"\".concat(host,\"/api/notes/addnote\"),{method:'POST',headers:{'Content-Type':'application/json','auth-token':localStorage.getItem('token')},body:JSON.stringify({title:title,description:description,tag:tag})});case 2:response=_context2.sent;_context2.next=5;return response.json();case 5:jsonData=_context2.sent;//adding new note logic\nnote=jsonData;setNotes(notes.concat(note));showAlert(\"Note added successfully\",\"success\");case 9:case\"end\":return _context2.stop();}},_callee2);}));return function addNote(_x,_x2,_x3){return _ref2.apply(this,arguments);};}();// edit an existing note\nvar editnote=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(id,title,description,tag){var response,json,newNotes,index,ele;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:_context3.next=2;return fetch(\"\".concat(host,\"/api/notes/updatenote/\").concat(id),{method:'PUT',headers:{'Content-Type':'application/json','auth-token':localStorage.getItem('token')},body:JSON.stringify({title:title,description:description,tag:tag})});case 2:response=_context3.sent;_context3.next=5;return response.json();case 5:json=_context3.sent;console.log(json);newNotes=JSON.parse(JSON.stringify(notes));index=0;case 9:if(!(index<notes.length)){_context3.next=19;break;}ele=notes[index];if(!(ele._id===id)){_context3.next=16;break;}newNotes[index].title=title;newNotes[index].description=description;newNotes[index].tag=tag;return _context3.abrupt(\"break\",19);case 16:index++;_context3.next=9;break;case 19:setNotes(newNotes);showAlert(\"Note edited successfully\",\"success\");case 21:case\"end\":return _context3.stop();}},_callee3);}));return function editnote(_x4,_x5,_x6,_x7){return _ref3.apply(this,arguments);};}();// for deleting a note\nvar deletenote=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(id){var response,json,newNotes;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1)switch(_context4.prev=_context4.next){case 0:_context4.next=2;return fetch(\"\".concat(host,\"/api/notes/deletenote/\").concat(id),{method:'DELETE',headers:{'Content-Type':'application/json','auth-token':localStorage.getItem('token')}});case 2:response=_context4.sent;_context4.next=5;return response.json();case 5:json=_context4.sent;console.log(json);newNotes=notes.filter(function(note){return note._id!==id;});setNotes(newNotes);showAlert(\"Note deleted successfully\",\"success\");case 10:case\"end\":return _context4.stop();}},_callee4);}));return function deletenote(_x8){return _ref4.apply(this,arguments);};}();return/*#__PURE__*/_jsx(NoteContext.Provider,{value:{notes:notes,getNotes:getNotes,addNote:addNote,editnote:editnote,deletenote:deletenote},children:props.children});};export default NoteState;// const s = {\n//     \"name\": \"abhi\",\n//     \"age\": \"19\"\n// };\n//make s state variable\n// const [state, setState] = useState(s);\n//update function to setState of s1\n// const update = () => {\n//     setTimeout(()=> {\n//         setState({\n//             \"name\": \"Larry\",\n//             \"age\": \"200\"\n//         })\n//     }, 3000);\n// }","map":{"version":3,"names":["React","useContext","useState","NoteContext","AlertContext","require","config","NoteState","props","host","process","env","showAlert","notesInitial","notes","setNotes","getNotes","fetch","method","headers","localStorage","getItem","response","json","jsonResData","addNote","title","description","tag","body","JSON","stringify","jsonData","note","concat","editnote","id","console","log","newNotes","parse","index","length","ele","_id","deletenote","filter","children"],"sources":["C:/Users/shrey/OneDrive/Desktop/Learn-React/Inotebook/Frontend/src/Context/notes/NoteState.js"],"sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport NoteContext from \"./NoteContext\";\r\nimport AlertContext from \"../alert/AlertContext\";\r\nrequire(\"dotenv\").config();\r\n\r\nconst NoteState = (props) => {\r\n\r\n    const host = process.env.host\r\n    const {showAlert} = useContext(AlertContext)\r\n\r\n    const notesInitial = [];\r\n\r\n    const [notes,setNotes] = useState(notesInitial);\r\n\r\n\r\n    // for fetching all notes\r\n    const getNotes = async ()=>{\r\n        // API Call to fetch all notes\r\n        const response = await fetch(`${host}/api/notes/fetchallnotes`, {\r\n            method: 'GET',\r\n            headers: {\r\n            'Content-Type': 'application/json',\r\n            'auth-token': localStorage.getItem('token')\r\n            },\r\n        });\r\n        const jsonResData = await response.json();\r\n        setNotes(jsonResData);\r\n    }\r\n\r\n\r\n    // To Add a Note\r\n    const addNote = async (title,description,tag)=>{\r\n\r\n        // API Call to add a new note\r\n        const response = await fetch(`${host}/api/notes/addnote`, {\r\n            method: 'POST',\r\n            headers: {\r\n            'Content-Type': 'application/json',\r\n            'auth-token': localStorage.getItem('token')\r\n            },\r\n            body: JSON.stringify({title,description,tag})\r\n        });\r\n        const jsonData = await response.json();\r\n\r\n        //adding new note logic\r\n        const note = jsonData;\r\n        setNotes(notes.concat(note));\r\n        showAlert(\"Note added successfully\",\"success\")\r\n    };\r\n\r\n     // edit an existing note\r\n     const editnote = async (id,title,description,tag)=>{\r\n        const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'auth-token': localStorage.getItem('token')\r\n            },\r\n            body: JSON.stringify({title,description,tag})\r\n          });\r\n          const json = await response.json();\r\n          console.log(json)\r\n\r\n          let newNotes = JSON.parse(JSON.stringify(notes));\r\n\r\n        for (let index = 0; index < notes.length; index++) {\r\n            const ele = notes[index];\r\n            if(ele._id===id){\r\n              newNotes[index].title=title;\r\n              newNotes[index].description=description;\r\n              newNotes[index].tag=tag;\r\n              break;\r\n            } \r\n        }\r\n        setNotes(newNotes);\r\n        showAlert(\"Note edited successfully\",\"success\")\r\n    };\r\n\r\n    // for deleting a note\r\n    const deletenote = async (id)=>{\r\n        // Api call to delete note with this id\r\n        const response = await fetch(`${host}/api/notes/deletenote/${id}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'auth-token': localStorage.getItem('token')\r\n            },\r\n          });\r\n          const json = await response.json();\r\n          console.log(json)\r\n\r\n        const newNotes = notes.filter((note)=>{return note._id!==id})\r\n        setNotes(newNotes);\r\n        showAlert(\"Note deleted successfully\",\"success\")\r\n    }\r\n\r\n  return (\r\n    <NoteContext.Provider value={{notes,getNotes,addNote,editnote,deletenote}}>\r\n        {props.children}\r\n    </NoteContext.Provider>\r\n  )\r\n}\r\n\r\nexport default NoteState\r\n\r\n\r\n\r\n    // const s = {\r\n    //     \"name\": \"abhi\",\r\n    //     \"age\": \"19\"\r\n    // };\r\n    //make s state variable\r\n    // const [state, setState] = useState(s);\r\n\r\n    //update function to setState of s1\r\n    // const update = () => {\r\n    //     setTimeout(()=> {\r\n    //         setState({\r\n    //             \"name\": \"Larry\",\r\n    //             \"age\": \"200\"\r\n    //         })\r\n    //     }, 3000);\r\n    // }\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}